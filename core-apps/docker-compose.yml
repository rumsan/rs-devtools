version: "3.9"
services:
  postgres:
    image: postgres:14
    restart: always
    container_name: "postgres"
    environment:
      - POSTGRES_USER=${NAME}
      - POSTGRES_PASSWORD=${PASSWORD}
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
      - ./dropbox:/dropbox
    ports:
      - 5432:5432

  mongodb:
    container_name: mongodb
    image: mongo:4.4
    volumes:
      - ./volumes/mongodb:/data/db
      - ./dropbox:/dropbox
    networks:
      - default_network
    restart: always
    ports:
      - 27017:27017

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    container_name: "pgadmin"
    volumes:
      - ./volumes/pgadmin:/var/lib/pgadmin
      - ./dropbox:/dropbox
    environment:
      - PGADMIN_DEFAULT_EMAIL=${EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - postgres

  dropbox:
    image: rumsan/santosh-dropbox:latest
    container_name: dropbox
    restart: always
    # env_file:
    #   - .dropbox.env
    environment:
      - NAME=${NAME}
      - PORT=${DROPBOX_PORT}
    ports:
      - "${DROPBOX_PORT}:${DROPBOX_PORT}"
    volumes:
      - ./dropbox:/dropbox

  ganache:
    image: rumsan/santosh-ganache:latest
    container_name: ganache
    restart: always
    environment:
      - PORT=${GANACHE_PORT}
      - MNEMONIC=${MNEMONIC}
      - DB_PATH=/db
      - ETH_BALANCE=1000000000
      - RS_TUNNEL=${NAME}-ganache
    ports:
      - "${GANACHE_PORT}:8545"
    volumes:
      - ./volumes/ganache:/db
      - ./dropbox:/dropbox
    networks:
      - default_network

  ipfs:
    image: ipfs/kubo
    container_name: ipfs
    restart: always
    volumes:
      - ./volumes/ipfs/data:/ipfs/data
      - ./volumes/ipfs/ipfs:/ipfs
      - ./volumes/ipfs/ipns:/ipns
      - ./dropbox:/dropbox
    environment:
      - IPFS_PATH=/ipfs/data
    ports:
      # Swarm listens on all interfaces, so is remotely reachable.
      - 4001:4001/tcp
      - 4001:4001/udp

      # The following ports only listen on the loopback interface, so are not remotely reachable by default.
      # If you want to override these or add more ports, see https://docs.docker.com/compose/extends/ .

      # API port, which includes admin operations, so you probably don't want this remotely accessible.
      - 127.0.0.1:5001:5001

      # HTTP Gateway
      - "${IPFS_PORT}:8080"

  mongo_express:
    container_name: mongo_express
    image: mongo-express:0.54.0
    networks:
      - default_network
    restart: always
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=${NAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${PASSWORD}
    volumes:
      - ./dropbox:/dropbox
    ports:
      - "${MONGOEX_PORT}:8081"
    depends_on:
      - mongodb

networks:
  default_network:
    driver: bridge
